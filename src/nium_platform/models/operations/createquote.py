"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import quotecreationrequest as shared_quotecreationrequest
from ...models.shared import quotecreationresponse as shared_quotecreationresponse
from typing import Optional, Union


@dataclasses.dataclass
class CreateQuoteRequest:
    quote_creation_request: Union[shared_quotecreationrequest.WithNoAmount, shared_quotecreationrequest.WithSourceAmount, shared_quotecreationrequest.WithDestinationAmount] = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""quoteCreationRequest"""
    client_hash_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'clientHashId', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the client."""
    x_request_id: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'x-request-id', 'style': 'simple', 'explode': False }})
    r"""Enter a unique UUID value"""
    



@dataclasses.dataclass
class CreateQuoteResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    quote_creation_response: Optional[shared_quotecreationresponse.QuoteCreationResponse] = dataclasses.field(default=None)
    r"""OK"""
    

