"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..errors import errorcodes403 as errors_errorcodes403
from dataclasses_json import Undefined, dataclass_json
from nium_platform import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ErrorDetail403(Exception):
    r"""error details description"""
    code: Optional[errors_errorcodes403.ErrorCodes403] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""The detailed error code associated with HTTP status 403.
    * `fx_client_no_access`: The client is authenticated but not authorized.
    """
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the error."""
    

    def __str__(self) -> str:
        return utils.marshal_json(self)
